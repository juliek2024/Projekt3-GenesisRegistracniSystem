Projekt : Zavěrečný projekt: Genesis Resources

Popis situace
V  postapokalyptickém světě, který sužovala zkáza a chaos, existovalo  jedno poslední místo naděje. Bylo to tajemné a těžko přístupné místo,  známé jen jako Oáza. V této Oáze bylo možné najít životně důležité suroviny, které zbyly po zničení zbytku světa.
Oáza  byla ukrytá v hlubokém údolí, obklopená neproniknutelnými lesy a  horami. Přeživší si o ní vyprávěli jako o magickém místě, kde pramenila voda a půda byla plodná. Jen ti nejstatečnější jedinci se odhodlali vydat na nebezpečnou cestu k Oáze.
Hlavní postavou byl Jack,  mladý a statečný dobrodruh, který se rozhodl vydat na cestu ke ztracené  Oáze. Věděl, že na těchto surovinách závisí přežití jeho komunity a  celého lidského rodu. Sbalil si minimum věcí, nabil svou zbraň a vydal  se na nebezpečnou cestu.
Cesta  k Oáze byla plná pastí, mutantů a dalších nebezpečí. Jack se musel  vyrovnat se samotou, hladem a utrpením. Každý den byl bojem o přežití,  ale jeho touha najít Oázu ho posouvala vpřed.
Po mnoha týdnech putování přes nekonečné pouště a zdevastovaná města Jack konečně spatřil zelenou oázu v dálce.  Jeho srdce zaplesalo radostí, ale nebezpečí ještě nebylo zažehnáno.  Musel překonat poslední překážku - stráže, které střežily vstup do Oázy.
S  použitím svých dovedností a statečnosti se Jackovi podařilo přesvědčit  stráže, že je hodný přístupu. Otevřely se brány a Jack vstoupil do Oázy.
V  Oáze byl přivítán vřelými lidmi, kteří si vážili jeho statečnosti. Zde  bylo vše, co bylo potřeba pro obnovu lidské civilizace. Vytvořila se  komunita, která začala znovu budovat a plánovat budoucnost.
Jackova  cesta ke ztracené Oáze se stala legendou, kterou vyprávěli další  generace. Byl symbolem naděje a odhodlání v postapokalyptickém světě.
Poté,  co Jack úspěšně překonal všechny překážky a dostal se do Oázy,  pochopil, že nalezené suroviny jsou klíčové pro obnovu lidské  civilizace. V jeho srdci se rodila myšlenka, že by mohl založit  společnost, která by tyto suroviny distribuovala a zajistila jejich  spravedlivé rozdělení mezi přeživší komunity.
Jack se seznámil s  dalšími obyvateli Oázy, kteří sdíleli jeho touhu po obnově a záchraně  lidského rodu. Společně se rozhodli zrealizovat jeho vizi a založit  společnost nazvanou Genesis Resources.
Genesis  Resources měla za úkol sbírat, zpracovávat a distribuovat životně  důležité suroviny ze záhadné Oázy do postapokalyptického světa. Jack se  stal vůdcem společnosti a se svým týmem odvážných průzkumníků a  odborníků zajistil potřebné suroviny.
Společnost Genesis Resources  se rychle rozrostla a stala se klíčovým hráčem v postapokalyptickém  světě. Jejich prioritou bylo zajistit, aby suroviny nebyly zneužívány nebo monopolizovány  jednotlivci nebo skupinami. Proto byli důslední ve svém závazku dodávat  suroviny spravedlivě a rovnoměrně mezi přeživší komunity.
Jack  a jeho společnost usilovali o obnovu lidské civilizace prostřednictvím  rozvoje a výstavby. Genesis Resources investovala do výzkumu a vývoje  nových technologií, které by pomohly přeživším komunitám vytvářet udržitelné a obnovitelné zdroje.
Jackova  vize oživila naději mezi lidmi, kteří se nacházeli na pokraji  zoufalství. Genesis Resources se stala symbolem naděje a spolupráce,  která ukazovala, že i v temných časech je možné najít způsob, jak se  znovu postavit na nohy.
Díky úsilí Jacka a jeho společnosti začalo  lidské společenství postupně obnovovat svou sílu a znovu budovat  civilizaci na základě spravedlnosti, spolupráce a udržitelnosti. Genesis  Resources se stala klíčovým prvkem přežití a rozvoje  postapokalyptického světa.

Zadání

Obrací se na tebe správní rada společnosti Genesis Resources. Tvým úkolem je vytvořit pro ni registrační systém, aby mohla suroviny distribuovat opravdu spravedlivě.

Naše zadání projektu:
aplikace bude obsahovat REST rozhraní
data se budou ukládat do databáze
je požadované správné rozdělení kódu (controller, service atd.)
důležité je také dbát na čistotu kódu
odevzdaní musí obsahovat export z Postmana (kterým je testované API)
odevzdání musí ještě obsahovat SQL příkazy, kterými byla vygenerována databáze
POŽADAVKY NA API
Požadované operace

založení nového uživatele
informace o uživateli
informace o všech uživatelích
upravit informace o uživateli
smazat uživatele
Založit nového uživatele je možné přes api: POST api/v1/users
Informace o novém uživateli budou předány skrz objekt

{ name: string, surname: string, personID: string(12) }
personID  je jedinečné a je generované pro každého obyvatele. Můžete si  představit, že je to něco jako rodné číslo, které je také více méně  jedinečné. PersonID je do našeho systému poskytováno skrz  nějakou certifikační autoritu. My si to nasimulujeme tak, že v našem  projektu vytvoříme soubor (například  dataPersonId.txt a do něho zapíšeme tyto hodnoty:

1   jXa4g3H7oPq2
2   yB9fR6tK0wLm
3   cN1vZ8pE5sYx
4   tQdG2kP3mJfB
5   iM5sO6zXcW7v
6   rU8nA9eT2bYh
7   wV6eH1fK7qZj
8   sL4gN9dC3bXz
9   kR0aZ7vW2nDl
10  eI1oY6tQ9dKj
11  gT4cR7wS0lVx
12  xF9hD2yJ3sWv
13  hM5bZ8nK4aVf
14  qE3lY6uT0vKd
15  bG2zC7jR9xVp
16  vB1fX4rH7iNt
17  aO8kP3mZ6dIw
18  dW9pL2eU1yNc
19  nS7tJ0qR5wGh
20  mY6sT1jA3cLz

Ještě je nutné říci, že v databázi musí být personID jedinečné. Tz. že při každém zápisu musíme nějakým způsobem zkontrolovat, zda personID nebylo přiřazeno již jinému záznamu.

UUID - Generování

Pro  každý nový záznam musí být vygenerovaný ještě UUID, což bude další  jedinečný identifikátor uživatele. Na vygenerování můžeš použít  například následující knihovnu (https://www.baeldung.com/java-uuid).

Informace o uživateli

dostat informace o jednom uživateli je možné přes api: GET api/v1/users/{ID}
Tento request vrátí následující objekt:

{id: int, name: string, surname: string }
ještě existuje varianta api/v1/users/{ID}?detail=true
Kdy request vrátí rozšířený objekt:

{id: int, name: string, surname: string, personID: string , uuid: string  }
Informace o všech uživatelích

dostat informace o všech uživatelích je možné přes api: GET api/v1/users
Tento request vrátí následující objekt:

List <{id: int, name: string, surname: string }>
ještě existuje varianta api/v1/users?detail=true
Kdy request vrátí rozšířený objekt:

{id: int, name: string, surname: string, personID: string, uuid: string  }
Upravit informace o uživateli

upravit uživatele je možné přes api: PUT api/v1/users
Informace o novém uživateli budou předány skrz objekt:

{id: int, name: string, surname: string }
Z toho tedy je jasné, že je možné upravit pouze  name a surname

Smazat uživatele

ještě existuje varianta DELETE api/v1/users/{ID}
Požadavky na databázi
Struktura

Doplňující možnosti
Pokud chceš udělat něco navíc :), můžeš si vybrat z následujících možností:
 = logovací framework
 = front-end
 = JUnit
 = vytvořit dva profily
